# Configuration file of Harbor

# The IP address or hostname to access admin UI and registry service.
# DO NOT use localhost or 127.0.0.1, because Harbor needs to be accessed by external clients.
hostname: {{ harbor_hostname }}

# http related config
http:
  # port for http, default is 80. If https enabled, this port will redirect to https port
  port: {{ harbor_exposed_http_port }}

{% if harbor_https_enabled | bool -%}
# https related config
https:
  # https port for harbor, default is 443
  port: {{ harbor_https_port }}
  # The path of cert and key files for nginx
  certificate: {{ harbor_https_certificate }}
  private_key: {{ harbor_https_private_key }}
{%- endif %}

# # Uncomment following will enable tls communication between all harbor components
# internal_tls:
#   # set enabled to true means internal tls is enabled
#   enabled: true
#   # put your cert and key files on dir
#   dir: /etc/harbor/tls/internal

{% if harbor_external_url -%}
# Uncomment external_url if you want to enable external proxy
# And when it enabled the hostname will no longer used
external_url: https://{{ harbor_external_url }}
{%- endif %}

# The initial password of Harbor admin
# It only works in first time to install harbor
# Remember Change the admin password from UI after launching Harbor.
harbor_admin_password: {{ harbor_admin_password }}

# Harbor DB configuration
database:
  # The password for the root user of Harbor DB. Change this before any production use.
  password: {{ harbor_database_password }}
  # The maximum number of connections in the idle connection pool. If it <=0, no idle connections are retained.
  max_idle_conns: {{ harbor_database_max_idle_conns }}
  # The maximum number of open connections to the database. If it <= 0, then there is no limit on the number of open connections.
  # Note: the default number of connections is 1024 for postgres of harbor.
  max_open_conns: {{ harbor_database_max_open_conns }}

# The default data volume
data_volume: {{ harbor_data_volume }}

# Harbor Storage settings by default is using /data dir on local filesystem
# Uncomment storage_service setting If you want to using external storage
# storage_service:
#   # ca_bundle is the path to the custom root ca certificate, which will be injected into the truststore
#   # of registry's and chart repository's containers.  This is usually needed when the user hosts a internal storage with self signed certificate.
#   ca_bundle:

#   # storage backend, default is filesystem, options include filesystem, azure, gcs, s3, swift and oss
#   # for more info about this configuration please refer https://docs.docker.com/registry/configuration/
#   filesystem:
#     maxthreads: 100
#   # set disable to true when you want to disable registry redirect
#   redirect:
#     disabled: false

# Trivy configuration
#
# Trivy DB contains vulnerability information from NVD, Red Hat, and many other upstream vulnerability databases.
# It is downloaded by Trivy from the GitHub release page https://github.com/aquasecurity/trivy-db/releases and cached
# in the local file system. In addition, the database contains the update timestamp so Trivy can detect whether it
# should download a newer version from the Internet or use the cached one. Currently, the database is updated every
# 12 hours and published as a new release to GitHub.
trivy:
  # ignoreUnfixed The flag to display only fixed vulnerabilities
  ignore_unfixed: {{ harbor_trivy_ignore_unfixed | lower }}
  # skipUpdate The flag to enable or disable Trivy DB downloads from GitHub
  #
  # You might want to enable this flag in test or CI/CD environments to avoid GitHub rate limiting issues.
  # If the flag is enabled you have to download the `trivy-offline.tar.gz` archive manually, extract `trivy.db` and
  # `metadata.json` files and mount them in the `/home/scanner/.cache/trivy/db` path.
  skip_update: {{ harbor_trivy_skip_update | lower }}
  #
  # insecure The flag to skip verifying registry certificate
  insecure: {{ harbor_trivy_insecure | lower }}
  # github_token The GitHub access token to download Trivy DB
  #
  # Anonymous downloads from GitHub are subject to the limit of 60 requests per hour. Normally such rate limit is enough
  # for production operations. If, for any reason, it's not enough, you could increase the rate limit to 5000
  # requests per hour by specifying the GitHub access token. For more details on GitHub rate limiting please consult
  # https://developer.github.com/v3/#rate-limiting
  #
  # You can create a GitHub token by following the instructions in
  # https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line
  #
  {% if harbor_trivy_github_token -%}
  github_token: {{ harbor_trivy_github_token }}
  {%- endif %}
  

jobservice:
  # Maximum number of job workers in job service
  max_job_workers: {{ harbor_jobservice_max_job_workers }}

notification:
  # Maximum retry count for webhook job
  webhook_job_max_retry: {{ harbor_notification_webhook_job_max_retry }}

chart:
  # Change the value of absolute_url to enabled can enable absolute url in chart
  absolute_url: {{ harbor_chart_absolute_url }}

# Log configurations
log:
  # options are debug, info, warning, error, fatal
  level: {{ harbor_log_level }}
  # configs for logs in local storage
  local:
    # Log files are rotated log_rotate_count times before being removed. If count is 0, old versions are removed rather than rotated.
    rotate_count: {{ harbor_log_local_rotate_count }}
    # Log files are rotated only if they grow bigger than log_rotate_size bytes. If size is followed by k, the size is assumed to be in kilobytes.
    # If the M is used, the size is in megabytes, and if G is used, the size is in gigabytes. So size 100, size 100k, size 100M and size 100G
    # are all valid.
    rotate_size: {{ harbor_log_local_rotate_size }}
    # The directory on your host that store log
    location: {{ harbor_log_local_location }}

  # Uncomment following lines to enable external syslog endpoint.
  # external_endpoint:
  #   # protocol used to transmit log to external endpoint, options is tcp or udp
  #   protocol: tcp
  #   # The host of external endpoint
  #   host: localhost
  #   # Port of external endpoint
  #   port: 5140

#This attribute is for migrator to detect the version of the .cfg file, DO NOT MODIFY!
_version: {{ harbor_release }}

{% if harbor_external_database_enabled | bool -%}
# Uncomment external_database if using external database.
external_database:
{%- if harbor_external_database.harbor.enabled | bool %}
  harbor:
    host: {{ harbor_external_database.harbor.host }}
    port: {{ harbor_external_database.harbor.port }}
    db_name: {{ harbor_external_database.harbor.db_name }}
    username: {{ harbor_external_database.harbor.username }}
    password: {{ harbor_external_database.harbor.password }}
    ssl_mode: {{ harbor_external_database.harbor.ssl_mode }}
    max_idle_conns: {{ harbor_external_database.harbor.max_idle_conns }}
    max_open_conns: {{ harbor_external_database.harbor.max_open_conns }}
{% endif -%}
{%- if harbor_external_database.notary_signer.enabled | bool %}
  notary_signer:
    host: {{ harbor_external_database.notary_signer.host }}
    port: {{ harbor_external_database.notary_signer.port }}
    db_name: {{ harbor_external_database.notary_signer.db_name }}
    username: {{ harbor_external_database.notary_signer.username }}
    password: {{ harbor_external_database.notary_signer.password }}
    ssl_mode: {{ harbor_external_database.notary_signer.ssl_mode }}
{% endif -%}
{%- if harbor_external_database.notary_server.enabled | bool %}
    notary_server:
    host: {{ harbor_external_database.notary_server.host }}
    port: {{ harbor_external_database.notary_server.port }}
    db_name: {{ harbor_external_database.notary_server.db_name }}
    username: {{ harbor_external_database.notary_server.username }}
    password: {{ harbor_external_database.notary_server.password }}
    ssl_mode: {{ harbor_external_database.notary_server.ssl_mode }}
{% endif -%}
{% endif %}

{%- if harbor_external_redis.enabled | bool %}
# Uncomment external_redis if using external Redis server
external_redis:
  host: {{ harbor_external_redis.host }}:{{ harbor_external_redis.port }}
  password: {{ harbor_external_redis.password }}
  # db_index 0 is for core, it's unchangeable
  registry_db_index: {{ harbor_external_redis.registry_db_index }}
  jobservice_db_index: {{ harbor_external_redis.jobservice_db_index }}
  chartmuseum_db_index: {{ harbor_external_redis.chartmuseum_db_index }}
  trivy_db_index: {{ harbor_external_redis.trivy_db_index }}
  idle_timeout_seconds: {{ harbor_external_redis.idle_timeout_seconds }}
{%- endif %}

# Uncomment uaa for trusting the certificate of uaa instance that is hosted via self-signed cert.
# uaa:
#   ca_file: /path/to/ca

# Global proxy
# Config http proxy for components, e.g. http://my.proxy.com:3128
# Components doesn't need to connect to each others via http proxy.
# Remove component from `components` array if want disable proxy
# for it. If you want use proxy for replication, MUST enable proxy
# for core and jobservice, and set `http_proxy` and `https_proxy`.
# Add domain to the `no_proxy` field, when you want disable proxy
# for some special registry.
proxy:
  http_proxy: {{ harbor_http_proxy }}
  https_proxy: {{ harbor_https_proxy }}
  no_proxy: "{{ harbor_no_proxy }}"
  components:
    - core
    - jobservice
    - trivy

{%- if harbor_metrics.enabled | bool %}
metric:
   enabled: true
   port: {{  harbor_metrics.port }}
   path: {{  harbor_metrics.path }}
{% endif -%}
