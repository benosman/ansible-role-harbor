version: '2.3'
services:

  log:
    image: goharbor/harbor-log:v{{ harbor_version }}
    container_name: harbor-log
    restart: always
    dns_search: .
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    volumes:
      - "{{ harbor_data_volume }}/logs/containers/:/var/log/docker/:z"
      - "{{ harbor_folder_st.stat.path }}/log/:/etc/logrotate.d/:z"
    ports:
      - 1514:10514
    networks:
      - harbor

  registry:
    image: goharbor/registry-photon:v{{ harbor_version }}
    container_name: registry
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - "{{ harbor_data_volume }}/registry:/storage:z"
      - "{{ harbor_folder_st.stat.path }}/registry/:/etc/registry/:z"
      - type: bind
        source: "{{ harbor_data_volume }}/secret/registry/root.crt"
        target: /etc/registry/root.crt
    networks:
      - harbor
    dns_search: .
    depends_on:
      - log
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://harbor-log:10514"
        tag: "registry"

  registryctl:
    image: goharbor/harbor-registryctl:v{{ harbor_version }}
    container_name: registryctl
    env_file:
      - "{{ harbor_folder_st.stat.path }}/registryctl/env"
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - "{{ harbor_data_volume }}/registry:/storage:z"
      - "{{ harbor_folder_st.stat.path }}/registry/:/etc/registry/:z"
      - type: bind
        source: "{{ harbor_folder_st.stat.path }}/registryctl/config.yml"
        target: /etc/registryctl/config.yml
    networks:
      - harbor
    dns_search: .
    depends_on:
      - log
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://harbor-log:10514"
        tag: "registryctl"

  postgresql:
    image: goharbor/harbor-db:v{{ harbor_version }}
    container_name: harbor-db
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    volumes:
      - "{{ harbor_data_volume }}/database:/var/lib/postgresql/data:z"
    networks:
      harbor:
    dns_search: .
    env_file:
      - "{{ harbor_folder_st.stat.path }}/db/env"
    depends_on:
      - log
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://harbor-log:10514"
        tag: "postgresql"

  core:
    image: goharbor/harbor-core:v{{ harbor_version }}
    container_name: harbor-core
    env_file:
      - "{{ harbor_folder_st.stat.path }}/core/env"
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
    volumes:
      - "{{ harbor_data_volume }}/ca_download/:/etc/core/ca/:z"
      - "{{ harbor_data_volume }}/psc/:/etc/core/token/:z"
      - "{{ harbor_data_volume }}:/data/:z"
      - "{{ harbor_folder_st.stat.path }}/core/certificates/:/etc/core/certificates/:z"
      - type: bind
        source: "{{ harbor_folder_st.stat.path }}/core/app.conf"
        target: /etc/core/app.conf
      - type: bind
        source: "{{ harbor_data_volume }}/secret/core/private_key.pem"
        target: /etc/core/private_key.pem
      - type: bind
        source: "{{ harbor_data_volume }}/secret/keys/secretkey"
        target: /etc/core/key
    networks:
      harbor:
    dns_search: .
    depends_on:
      - log
      - registry
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://harbor-log:10514"
        tag: "core"

  portal:
    image: goharbor/harbor-portal:v{{ harbor_version }}
    container_name: harbor-portal
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    networks:
      - harbor
    dns_search: .
    depends_on:
      - log
      - core
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://harbor-log:10514"
        tag: "portal"

  jobservice:
    image: goharbor/harbor-jobservice:v{{ harbor_version }}
    container_name: harbor-jobservice
    env_file:
      - "{{ harbor_folder_st.stat.path }}/jobservice/env"
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - "{{ harbor_data_volume }}/logs/jobs:/var/log/jobs:z"
      - type: bind
        source: "{{ harbor_folder_st.stat.path }}/jobservice/config.yml"
        target: /etc/jobservice/config.yml
    networks:
      - harbor
    dns_search: .
    depends_on:
      - redis
      - core
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://harbor-log:10514"
        tag: "jobservice"
  redis:
    image: goharbor/redis-photon:v{{ harbor_version }}
    container_name: redis
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - "{{ harbor_data_volume }}/redis:/var/lib/redis"
    networks:
      harbor:
    dns_search: .
    depends_on:
      - log
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://harbor-log:10514"
        tag: "redis"

  proxy:
    image: goharbor/nginx-photon:v{{ harbor_version }}
    container_name: nginx
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    volumes:
      - "{{ harbor_folder_st.stat.path }}/nginx:/etc/nginx:z"
    networks:
      - harbor
    dns_search: .
    ports:
      - 80:80
    depends_on:
      - postgresql
      - registry
      - core
      - portal
      - log
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://harbor-log:10514"
        tag: "proxy"

networks:
  harbor:
    external: false
